rnom(100)
rnorm(100)
plot(rnorm(100))
plot(rnorm(100))
plot(rnorm(100))
anscombe
anscombex$x1
anscombe$x1
mean(anscombe$x2)
lm(y1-x1)
anscombe$x1
mean(anscombe$x2)
lm(y1-x1, date=anscombe)
lm(y1-x1, data=anscombe)
lm(y1-x1, data = anscombe)
lm(y2-x2, data = anscombe)
mean(anscombe$x1)
mean(anscombe$x2)
lm(y1-x1, data = anscombe)
lm(y2-x2, data = anscombe)
plot(anscombe$x1, anscombe$y2)
lm(y1-x1, data=anscombe)
lm(y2-x2, data=anscombe)
plot(anscombe$x1, anscombe$y2)
plot(anscombe$x2, anscombe$y2)
plot(anscombe$x1, anscombe$y2, col='red', pch=20)
lm(y1-x1, data=anscombe)
par(mfrow=c(1,2))
plot(anscombe$x1, anscombe$y2, col='red', pch=20)
plot(anscombe$x2, anscombe$y2)
anscombe$x1
anscombe$y1
mean(anscombe$x1)
mean(anscombe$x2)
lm(y1-x1, data=anscombe)
lm(y2-x2, data=anscombe)
par(mfrow=c(1,1))
plot(anscombe$x1, anscombe$y2, col='red', pch=20)
abline(lm(y1-x1, data=anscombe))
mean(anscombe$y1)
lm(y1-x1, data=anscombe)
lm(y2-x2, data=anscombe)
par(mfrow=c(1,1))
plot(anscombe$x1, anscombe$y2, col='red', pch=20)
abline(lm(y1-x1, data=anscombe))
plot(anscombe$x2, anscombe$y2)
?mean(anscombe$y1)
lm(y1-x1,data=anscombe)
lm(y1-x1, data=anscombe)
lm(y2-x2, data=anscombe)
??mean(anscombe$y1)
??mean(anscombe$y1)
lm(y1~x1, data=anscombe)
anscombe$x1
anscombe$y1
mean(anscombe$x1)
mean(anscombe$y1)
lm(y1~x1, data=anscombe)
lm(y2~x2, data=anscombe)
par(mfrow=c(1,1))
plot(anscombe$x1, anscombe$y2, col='red', pch=20)
abline(lm(y1-x1, data=anscombe))
plot(anscombe$x2, anscombe$y2)
par(mfrow=c(1,2))
plot(anscombe$x1, anscombe$y2, col='red', pch=20)
abline(lm(y1-x1, data=anscombe))
plot(anscombe$x2, anscombe$y2)
x <- 1:12
x <- 1:12
x <- 1:12
x <- 1:12
y <- runif(n=12, min=70, max=80)
x <- 1:12
y <- runif(n=12, min=70, max=80)
plot(x,y,ylim =(0,100))
x <- 1:12
y <- runif(n=12, min=70, max=80)
plot(x,y,ylim =(0,100), type='l')
x <- 1:12
y <- runif(n=12, min=70, max=80)
plot(x,y,ylim =(0,100), type='l')
x <- 1:12
y <- runif(n=12, min=70, max=80)
plot(x,y,ylim =c(0,100), type='l')
plot(x, y, ylim =c(65.85),type='l')
x <- 1:12
y <- runif(n=12, min=70, max=80)
plot(x,y,ylim =c(0,100), type='l')
x <- 1:12
y <- runif(n=12, min=70, max=80)
plot(x, y, ylim =c(0,100), type='l')
plot(x, y, ylim =c(65.85),type='l')
x <- 1:12
y <- runif(n=12, min=70, max=80)
plot(x, y, ylim =c(0,100), type='l')
x <- 1:12
y <- runif(n=12, min=70, max=80)
plot(x, y, ylim =c(0,100), type='l')
plot(x, y, ylim =c(65,85), type='l')
x <- 1:12
y <- runif(n=12, min=70, max=80)
plot(x, y, ylim =c(0,100), type='l')
plot(x[1:4], y[1:4], ylim =c(65,85), type='l')
x <- 1:12
y <- runif(n=12, min=70, max=80)
plot(x, log(y), ylim =c(0,100), type='l')
plot(x[1:4], y[1:4], ylim =c(65,85), type='l')
x <- 1:12
y <- runif(n=12, min=70, max=80)
plot(x, log(y), ylim =c(0,100), type='l')
dat <- iris$Sepal.Width
var(dat)
sd(dat)
d <- c(1:10)
sort(x =d, decreasing = FALSE)
`+`(2.3)
x[ x > 5 ]
x[ x > 5 ]
x <- 1:10
x >= 5
x[ x > 5 ]
# 식의 논리값을 넣을수도있다.
sum(x> 5)
sum(x[x >5 ])
# true = 1:
# false = 0:
x[x>5 & x<8]
x <- c(90, 34, 89, 22)
lst <- list(name = "홍길동", age= 34, status = TRUE, score = x)
lst[1]
lst[[4]]
lst$age
# 4번째(score) 값을 가져올수 있다.
lst[[4,3]]
# 4번째(score) 값을 가져올수 있다.
lst[[4]]:3
# 4번째(score) 값을 가져올수 있다.
lst[[4]][3]
x <- c("A", "B","0","B" )
f <- factor(x)
x(2)
x <- c("A", "B","0","B" )
f <- factor(x)
x[2]
f[2]
levels(f)
as.integer(f)
m <- matrix(1: 20, nrow =4, ncol =5)
m <- matrix(1: 20, nrow = 4, ncol = 5)
m <- matrix(1: 20, nrow = 4, ncol = 5)
m
m <- matrix(1:20, nrow = 4, ncol = 5)
m
m <- matrix(1:2, nrow = 4 )
m
m <- matrix(1:20, nrow = 4 )
m
m <- matrix(1:19, ncol = 5, nrow = 4)
m
(m1 <- matrix(1:20, nrow = 4, ncol = 5, byrow = T))
x <- 1:4
y <- 5:8
cbind(x,y)
rbind(x,y)
(x <- matrix(1:20, ncol = 5))
x[2,3]
x[3, ]
x[ ,2]
x[2,2][2,3]
x[2,2,3]
x[2,2]
x[2,2][3]
x[2,2][3,2]
x[2,2:3]
city <- c("seoul", "washington", "hongkong")
ranking <- c(1, 2, 3)
df <- data.frame(city, ranking)
str(df)
df <- data.frame(city, ranking, stringsAsFactors = F)
str(df)
iris[, c(1,2)]
iris[, c(1, 3, 5)]
iris[2:3, c("sepal.width", "sepal.lenght")]
iris[2:3, c("sepal.width", "sepal.length")]
iris[, c(1,2)]
iris[, c(1, 3, 5)]
iris[2:3, c("sepal.width", "sepal.length")]
iris[1:2, -5]
iris[, c("sepal.width", "sepal.length")]
iris[, c(1,2)]
iris[, c(1, 3, 5)]
iris[, c("sepal.length", "species")]
iris[, c(1,2)]
iris[, c(1, 3, 5)]
iris[, c("Sepal.length", "Species")]
iris[1:2, -5]
>iris
iris
iris[, c("Sepal.Length", "Species")]
dim(iris)
nrow(iris)
ncol(iris)
colnames(iris)
head(iris)
dim(iris)
nrow(iris)
ncol(iris)
colnames(iris)
head(iris)
tail(iris)
unique(iris[, 5])
table(iris$Species)
m(1:50)
m <- matrix(1:50)
m[,1] >= 3
m [seq(1, 10, 2),]
seq(1, 10, 2)
m <- matrix(1:50)
m
m[,1] >= 3
m [seq(1, 10, 2),]
seq(1, 10, 2)
colSums(iris,[-5])
colSums(iris[,-5])
colSums(iris[,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])[1:2]
colSums(iris[,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])[1:2]
rowMeans(iris[,-5])[1:2]
m <- matrix(1:6, nrow = 2)
t(m)
subset(iris, species == "setosa")[1:5, ]
subset(iris, species == "setosa")
subset(iris, species == "setosa")
subser(iris, sepal.length > 5,0 & sepal.width > 4, 0)
iris
subset(iris, Species == "setosa")
subset(iris, Species == "setosa")
subser(iris, Sepal.length > 5,0 & sepal.width > 4, 0)
subset(iris, Species == "setosa")
subser(iris, Sepal.length > 5,0 & Sepal.width > 4, 0)
subser(iris, Sepal.Length > 5,0 & Sepal.width > 4, 0)
subset(iris, Sepal.Length > 5,0 & Sepal.width > 4, 0)
subset(iris, Species == "setosa")
iris$Species == 'setosa'
subset(iris, Species == "setosa")
iris[iris$Species == 'setosa',]
class(iris)
is.matrix(iris)
is.data.frame(iris)
typeof(iris)
class(iris)
is.matrix(iris)
is.data.frame(iris)
typeof(iris)
is.matrix(state.x77)
is.data.frame(state.x77)
setwd("c:/haka")
setwd("c:/haka")
write.scv(airquality, "airquality.csv", row.names = F)
write.csv(airquality, "airquality.csv", row.names = F)
setwd("c:/haka")
write.csv(airquality, "airquality.csv", row.names = F)
write.csv(airquality, "airquality.csv", row.names = F)
wirte.csv(airquality, "airquality.scv", row.names = F)
wirte.csv(iris, "iris.csv", row.names = F)
air <- read.scv("airquality.csv"), header = T
head(air)
air <- read.csv("airquality.csv"), header = T
air <- read.csv("airquality.csv", header = T)
head(air)
row(,5)
air(,5)
air[,5]
subset(air, month ==5)
subset(air, Month ==5)
subset(air, Month ==5)
air[air$Month == 5, ]
grade <- "A"
if (grade == "A"){
bouns <- 100
} else {
bouns <- 50
}
print(bouns)
}
grade <- "A"
if (grade == "A"){
bouns <- 100
} else {
bouns <- 50
}
print(bouns)
a<- 10
b<- 20
ifelse(a > 5 && b>10, a+b, 0)
ifelse(a > 5 :: b>30, a*b, 0)
ifelse(a > 5 ;; b>30, a*b, 0)
ifelse(a > 5 :: b>30, a*b, 0)
head(iris)
head(iris)
iris$Grade <- ifelse(iris$Sepal.Length >= 5, 'H','L' )
iris
for (i in 2:9){
cat("2 X", i, "=", 2 * 1, "/n")
}
for (i in 2:9){
cat("2 X", i, "=", 2 * 1, "/n")
}
for (i in 2:9 ){
cat("2 X", i, "=", 2 * 1, "\n")
}
total <- 0
for (i in 1:100){
total <- total +i
}
print(total)
for (i in 2:9){
cat("9 X", i, "=", 9*1, "\n")
}
for (i in 2:9 ){
for (i in 1:9){
cat(i, "X", j, ' = ', i*j, '\n')
}
cat("2 X", i, "=", 2 * 1, "\n")
}
for (i in 2:9 ){
for (j in 1:9){
cat(i, "X", i, ' = ', i*j, '\n')
}
cat("2 X", i, "=", 2 * 1, "\n")
}
for (i in 2:9){
cat("9 X", i, "=", 9*1, "\n")
}
for (i in 2:9){
cat("9 X", i, "=", 9*i, "\n")
}
for (j in 1:9){
cat(i, "X", i, ' = ', i*j, '\n')
}
print(total)
for (i in 2:9){
cat("9 X", i, "=", 9*i, "\n")
}
total <- total +i
for (i in 2:9){
cat("9 X", i, "=", 9*i, "\n")
}
head(iris[, 1:4])
head(iris[, 1:4])
apply(iris,[, 1:4], 2, mean)
apply(iris[,-5],1,mean[1:10])
apply(iris,[, 1:4], 2, mean)
iris[,1:4]
apply(iris[,1:4], 2, mean)
apply(iris,[,1:4], 2, mean)
apply(iris[,1:4],2,mean)
apply(iris,[,1:4],2,mean)
apply(iris[,1:4],2,mean)
